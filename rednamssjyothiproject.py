# -*- coding: utf-8 -*-
"""rednamssjyothiproject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vjnTmVbKXbJA1IEL5fKXdP_ShHeY2FVS
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets

# Take make moons in built dataset

data_ =datasets.make_moons(100)

data_

inputdata=pd.DataFrame(data=data_[0])

inputdata.head()

# create output dataframe

outputData = pd.DataFrame(data=data_[1])
outputData.head()

# create a scatter plot for inputData set
plt.scatter(inputdata[0],inputdata[1])

# create a scatter plot for inputData set with outputData color
plt.scatter(inputdata[0],inputdata[1],c=outputData)



# Call the sklearn Kmeans and make a model with 200 samples


#model_fit
from sklearn.cluster import KMeans
model=KMeans(n_clusters=5)
model.fit(inputdata)

model.labels_

from sklearn import metrics

metrics.silhouette_score(inputdata,model.labels_)

plt.scatter(inputdata[0],inputdata[1],c=model.labels_)

cluster_range = range(1, 20)
error_list = []

for i in cluster_range:
    model = KMeans(n_clusters=i)
    model.fit(inputdata)
    res = model.inertia_
    error_list.append(res)

import matplotlib.pyplot as plt

plt.plot(cluster_range, error_list, marker = "o", color = "g", markersize = 10)
plt.xlabel("Cluster Range")
plt.ylabel("IntraCluster Sum")
plt.title("KMeans")
plt.show()